package controller;

import model.SocketUscente;
import prog.io.ConsoleInputManager;
import utilities.Ticket;

public class ControllerUscente {
	
	private SocketUscente socket;
	
	private ConsoleInputManager in;
	
	private float prezzoTicket;
	private float importo;
	
	
	public ControllerUscente(SocketUscente socket) {
		
		this.socket = socket;
		
		in = new ConsoleInputManager();
		
	}
	
	
	//inserisco da console perchè non ho un lettore carte...
	public void setTicket( ) {
		
		Ticket ticket = new Ticket(in.readLine("codice biglietto: "));
		
		socket.setTicket(ticket);
		
	}
	
	public boolean activePayment() throws InterruptedException {
		
		prezzoTicket = Float.parseFloat(socket.response());
		if(prezzoTicket != -1) 
			return true;
		else
			return false; //ticket non riconosciuto
		
	}
	
	
	public float getPrezzoTicket() {
		
		return prezzoTicket;
		
	}
	
	//questa funzione vorrebbe in teoria restituire l'inserimento da un lettore di banconote/monete
	public double insertImporto() {
		
		importo = (float) in.readDouble("importo: ");
		
		return importo;
	}
	
	//questa funzione vorrebbe in teoria restiuire il resto usando il lettore di banconote/monete
	public float daiResto() {
		
		return importo - prezzoTicket;
		
	}
	
	
	
	public boolean sendPayment(String metodo, double somma) throws InterruptedException {
		
		socket.sendPayment(metodo,somma);
		
		if(Integer.parseInt(socket.response()) == 1)
			return true;
		else
			return false; //problemi nel pagamento
		
	}

}
